import dependencies.Annotations
import dependencies.Application
import dependencies.Dependencies
import dependencies.Plugins
import dependencies.Versions

apply plugin: Plugins.application_plugon
apply plugin: Plugins.kotlin_android
apply plugin: Plugins.kotlin_andorid_extensions
apply plugin: Plugins.kapt
apply plugin: Plugins.dagger_hilt

android {
    compileSdkVersion Application.compile_sdk
    buildToolsVersion Application.build_tools

    defaultConfig {
        applicationId Application.id
        minSdkVersion Application.min_version
        targetSdkVersion Application.target_version
        versionCode Application.version_code
        versionName Application.version_name

        testInstrumentationRunner "com.shalom.marvelogy.TestApplicationRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'marvelPublic', marvelPublicKey
        it.buildConfigField 'String', 'marvelPrivate', marvelPrivateKey
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation Dependencies.kotlin_standard_library
    implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx
    implementation Dependencies.navigation_runtime
    implementation Dependencies.navigation_ui
    implementation Dependencies.navigation_fragment
    implementation Dependencies.navigation_dynamic

    implementation Dependencies.play_core
    implementation Dependencies.leak_canary
    implementation Dependencies.room_runtime
    implementation Dependencies.room_ktx

    implementation Dependencies.retrofit
    implementation Dependencies.retrofit_gson
//    implementation Dependencies.firebase_firestore

    implementation Dependencies.kotlin_coroutines_play_services
//    implementation Dependencies.firebase_analytics
//    implementation Dependencies.firebase_crashlytics


    implementation Dependencies.appcompat
    implementation Dependencies.constraintlayout
    implementation Dependencies.material_design

    implementation Dependencies.dagger_hilt


    kapt Annotations.room_compiler
    kapt Annotations.dagger_hilt_compiler

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    // When using Kotlin.
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'


    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def lifecycle_version = "2.2.0"

// LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"



    androidTestImplementation "com.google.dagger:hilt-android-testing:${Versions.dagger_hilt}"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${Versions.dagger_hilt}"

    def fragment_version = "1.3.0-alpha06"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    def test_version = "1.2.0"
    androidTestImplementation "androidx.test:core-ktx:$test_version"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7"


}
kapt {
    correctErrorTypes true
}